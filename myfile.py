# -- coding: utf-8 --
"""myfile

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15e-V4gddIhN9kVunjOiHNkcsxjzHTuap
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
from streamlit_option_menu import option_menu

# Configuraci칩n de la p치gina de Streamlit
st.set_page_config(page_title="Deforestaci칩n en 츼reas Naturales Protegidas", page_icon="游꺕", initial_sidebar_state="expanded", layout='wide')

# Cargar datos
archivo = "Dataset_DeforestacionAnp_SERNANP.csv"
data = pd.read_csv(archivo)

# Configuraci칩n del men칰
with st.sidebar:
    menu = option_menu(
        menu_title="Men칰 Principal",
        options=["Inicio", "Gr치ficos", "Data", "Comparativo", "Zonificaci칩n"],
        icons=["house", "bar-chart", "table", "line-chart", "map"],
        menu_icon="menu-app",
        default_index=0
    )

# Secci칩n: Inicio
if menu == "Inicio":
    st.title('Huellas de la deforestaci칩n')
    st.header("Rastreando el impacto de la p칠rdida forestal en Per칰 a trav칠s del tiempo")
    st.write("La deforestaci칩n en Per칰 es un fen칩meno alarmante...")
    st.write("En este caso, analizaremos un registro de monitoreo...")

# Secci칩n: Gr치ficos
if menu == "Gr치ficos":
    st.header("Gr치ficos de Deforestaci칩n")
    seleccion_anio = st.selectbox("Selecciona el a침o para mostrar el gr치fico", [2021, 2022, 2023])
    
    # Funci칩n para procesar y filtrar datos
    def procesar_datos_por_anio(data, anio):
        meses = {1: 'Enero', 2: 'Febrero', 3: 'Marzo', 4: 'Abril', 5: 'Mayo', 6: 'Junio',
                 7: 'Julio', 8: 'Agosto', 9: 'Septiembre', 10: 'Octubre', 11: 'Noviembre', 12: 'Diciembre'}
        datos_anio = data[data['ANIO_REPORTE'] == anio]
        area_por_mes = datos_anio.groupby('MES_IMAG')['AREA_DEFO'].sum().reset_index()
        area_por_mes['MES_NOMBRE'] = area_por_mes['MES_IMAG'].map(meses)
        return area_por_mes, datos_anio
    
    # Mostrar gr치ficos seg칰n selecci칩n de a침o
    def graficos_y_tabla(data_anio, datos_filtrados, anio, color):
        st.write(f"Gr치fico del 치rea deforestada por mes en {anio}:")
        fig, ax = plt.subplots()
        ax.plot(data_anio['MES_NOMBRE'], data_anio['AREA_DEFO'], marker='o', color=color)
        ax.set_title(f'츼rea deforestada por mes en {anio}')
        ax.set_xlabel('Mes')
        ax.set_ylabel('츼rea Deforestada (ha)')
        ax.grid(True)
        plt.xticks(rotation=45)
        st.pyplot(fig)
        st.write(f"Datos filtrados para el a침o {anio}:")
        st.dataframe(datos_filtrados[['MES_IMAG', 'ANIO_REPORTE', 'AREA_DEFO']])
    
    data_anio, datos_filtrados = procesar_datos_por_anio(data, seleccion_anio)
    color = {'2021': 'orange', '2022': 'green', '2023': 'blue'}[str(seleccion_anio)]
    graficos_y_tabla(data_anio, datos_filtrados, seleccion_anio, color)

# Secci칩n: Data
if menu == "Data":
    st.header("Vista completa de los datos")
    st.write("Tabla con todos los datos del registro:")
    st.dataframe(data)

# Secci칩n: Comparativo
if menu == "Comparativo":
    st.header("Comparaci칩n entre A침os")
    promedios = pd.DataFrame({
        "A침o": ["2021", "2022", "2023"],
        "Promedio Mensual (ha)": [
            data[data['ANIO_REPORTE'] == 2021]['AREA_DEFO'].mean(),
            data[data['ANIO_REPORTE'] == 2022]['AREA_DEFO'].mean(),
            data[data['ANIO_REPORTE'] == 2023]['AREA_DEFO'].mean()
        ]
    })

    fig, ax = plt.subplots()
    ax.bar(promedios['A침o'], promedios['Promedio Mensual (ha)'], color=['orange', 'green', 'blue'])
    ax.set_title('Promedio mensual de 치rea deforestada (2021-2023)')
   


